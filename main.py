import asyncio
from playwright.async_api import async_playwright
import requests
import datetime

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
URL = "https://reipv6.sre.gob.mx/sinna/registro/citas/eyJpdiI6ImR5bXZ2eGtuciswb3pJUzZ4cjVrT3c9PSIsInZhbHVlIjoiS1hPRU1Fc0QvaSs2TXNjVlYvWXhRUT09IiwibWFjIjoiMTAwZGUwMWUzOTBmZmQwMjVlYTg3MmE4Yjk2ODAzNzdmZjU3YWUzMjdjYmJmNmNkMWVkYWJhMmExMTRiMmQ3NSIsInRhZyI6IiJ9"
TELEGRAM_BOT_TOKEN = "8101121299:AAG5M15XQjgLJX7zjQiPqqeiFgTTg_lVgoU"
TELEGRAM_CHAT_ID = "243580570"
CHECK_INTERVAL = 600  # 10 –º–∏–Ω—É—Ç

# üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
def send_telegram(text):
    print("üì¨ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram:", text)
    try:
        r = requests.post(
            f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage",
            data={"chat_id": TELEGRAM_CHAT_ID, "text": text}
        )
        print("üì® –°—Ç–∞—Ç—É—Å Telegram:", r.status_code)
        if not r.ok:
            print("‚ö†Ô∏è –û—Ç–≤–µ—Ç Telegram:", r.text)
    except Exception as e:
        print("‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ Telegram:", e)

# üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞
async def check_dates():
    print(f"üîç [{datetime.datetime.now()}] –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞—Ç...")
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=True)
        page = await browser.new_page()
        await page.goto(URL, timeout=60000)
        await page.wait_for_timeout(7000)

        available = await page.locator("td:has-text('Disponible')").all()
        if available:
            days = [await d.inner_text() for d in available]
            send_telegram(f"üìÖ –î–æ—Å—Ç—É–ø–Ω—ã –¥–∞—Ç—ã: {', '.join(days)}\nüëâ {URL}")
        else:
            print("‚è± –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞—Ç.")
        await browser.close()

# üîÅ –¶–∏–∫–ª —Ä–∞–±–æ—Ç—ã
async def loop():
    print("üîÑ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (–∏–Ω—Ç–µ—Ä–≤–∞–ª 20 –º–∏–Ω—É—Ç)")
    await asyncio.sleep(3)
    while True:
        try:
            await check_dates()
        except Exception as e:
            print("‚ùó –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:", e)
        await asyncio.sleep(CHECK_INTERVAL)

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(loop())
